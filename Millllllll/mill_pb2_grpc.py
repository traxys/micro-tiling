# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mill_pb2 as mill__pb2


class MillStub(object):
  """Turns a Job
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Turn = channel.unary_stream(
        '/Mill/Turn',
        request_serializer=mill__pb2.Job.SerializeToString,
        response_deserializer=mill__pb2.Response.FromString,
        )


class MillServicer(object):
  """Turns a Job
  """

  def Turn(self, request, context):
    """Rotates each segment in a Job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MillServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Turn': grpc.unary_stream_rpc_method_handler(
          servicer.Turn,
          request_deserializer=mill__pb2.Job.FromString,
          response_serializer=mill__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Mill', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
